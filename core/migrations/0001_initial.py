# Generated by Django 4.1.4 on 2023-09-04 06:07

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0013_alter_user_username"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/ only.",
                        max_length=150,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("verified_at", models.CharField(default="False", max_length=200)),
                ("role", models.CharField(default="user", max_length=200)),
                ("status", models.CharField(default="1", max_length=20)),
                (
                    "updated_at",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 546338),
                        max_length=200,
                    ),
                ),
                (
                    "created_at",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 546338),
                        max_length=200,
                    ),
                ),
                ("remember_token", models.CharField(default="False", max_length=200)),
                ("referal_by", models.CharField(max_length=200, null=True)),
                (
                    "referal_code",
                    models.CharField(default="0000", max_length=200, unique=True),
                ),
                ("phone_no", models.CharField(max_length=200, null=True)),
                ("activation_date", models.CharField(default="N/A", max_length=200)),
                ("paid_members", models.CharField(default="False", max_length=200)),
                ("business", models.CharField(default="0", max_length=200)),
                ("farming_roi_status", models.CharField(default="1", max_length=200)),
                ("staking_roi_status", models.CharField(default="1", max_length=100)),
                ("level_income_status", models.CharField(default="1", max_length=100)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="appsettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("logolight", models.CharField(max_length=200)),
                ("logodart", models.CharField(max_length=200)),
                ("favicon", models.CharField(max_length=200)),
                ("aboutus", models.TextField(default="")),
                ("facebook", models.CharField(max_length=200)),
                ("twitter", models.CharField(max_length=200)),
                ("linkedin", models.CharField(max_length=200)),
                ("instagram", models.CharField(max_length=200)),
                ("email", models.CharField(max_length=200)),
                ("status", models.CharField(default="1", max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="cofounderclub",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("club", models.CharField(max_length=200, unique=True)),
                ("business", models.CharField(max_length=200)),
                ("reward", models.CharField(max_length=200)),
                ("status", models.CharField(default="1", max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Emailservice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service", models.CharField(max_length=200)),
                ("host", models.CharField(max_length=200)),
                ("user", models.CharField(max_length=200)),
                ("password", models.CharField(max_length=200)),
                ("port", models.CharField(max_length=200)),
                ("status", models.CharField(default="0", max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="gallaryimages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("imgpath", models.CharField(max_length=200)),
                (
                    "title",
                    models.TextField(
                        default="The calendar may say spring, but a cool breeze through your open window makes a lightweight throw blanket a must-have."
                    ),
                ),
                ("status", models.CharField(default="1", max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="levels",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.CharField(max_length=200)),
            ],
            options={
                "db_table": "levels",
            },
        ),
        migrations.CreateModel(
            name="ManageRoi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("farming_roi", models.CharField(default="1", max_length=100)),
                ("staking_roi", models.CharField(default="1", max_length=100)),
                ("level_income", models.CharField(default="1", max_length=100)),
            ],
            options={
                "db_table": "manageroi",
            },
        ),
        migrations.CreateModel(
            name="membership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("points", models.CharField(default=20, max_length=200)),
                ("refferal_commision", models.CharField(default="0", max_length=200)),
                ("directincomepercent", models.CharField(default="50", max_length=200)),
                ("status", models.CharField(default="1", max_length=200)),
                ("roi", models.CharField(default="0", max_length=200)),
                ("roi_period", models.CharField(default="1", max_length=200)),
                ("staking", models.CharField(default=False, max_length=100)),
                ("plan_period", models.CharField(max_length=100, null=True)),
                ("min_amount", models.CharField(default="50", max_length=100)),
                ("max_amount", models.CharField(max_length=100, null=True)),
                ("overall_roi", models.CharField(default="0", max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="newsmodel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("news", models.CharField(max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 550377),
                        max_length=100,
                    ),
                ),
                ("status", models.CharField(default=True, max_length=200)),
                ("datato", models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="plansmodel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("status", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Rank",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rank", models.CharField(max_length=200, unique=True)),
                ("royality_income", models.CharField(max_length=200)),
                ("business_required", models.CharField(default="7500", max_length=200)),
                ("reward", models.CharField(default="android", max_length=200)),
                ("image", models.CharField(default="android.jpg", max_length=200)),
                ("status", models.CharField(default="1", max_length=100)),
            ],
            options={
                "db_table": "rank",
            },
        ),
        migrations.CreateModel(
            name="WithdrawSettingModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("min_amount", models.CharField(max_length=200)),
                ("max_amount", models.CharField(default=100, max_length=200)),
                ("fees", models.CharField(max_length=200)),
                (
                    "bscaddress",
                    models.CharField(
                        default="0x83F928c66F437507EB399F8E91e84f2fD15C57Ec",
                        max_length=250,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="youtubevideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("videolink", models.CharField(max_length=200)),
                ("type", models.CharField(default="1", max_length=255)),
                ("status", models.CharField(default="1", max_length=100)),
                ("sequence", models.CharField(default="0", max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name="wallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("avaliable_balance", models.CharField(default="0", max_length=200)),
                ("freezed_balance", models.CharField(default="0", max_length=200)),
                ("reserved_balance", models.CharField(default="0", max_length=200)),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "wallet",
            },
        ),
        migrations.CreateModel(
            name="userWithdrawls",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(default="0", max_length=200)),
                ("amount", models.CharField(max_length=200)),
                ("currency", models.CharField(default="USDT", max_length=200)),
                ("address", models.CharField(max_length=200, null=True)),
                ("type", models.CharField(default="0", max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 552351),
                        max_length=200,
                    ),
                ),
                ("fees", models.CharField(default="0", max_length=200)),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "wallet_id",
                    models.ForeignKey(
                        db_column="wallet_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.wallet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="userunlockedlevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(default="1", max_length=100)),
                (
                    "level_id",
                    models.ForeignKey(
                        db_column="level_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.levels",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserStaking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.CharField(max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 549371),
                        max_length=200,
                    ),
                ),
                ("status", models.CharField(default="0", max_length=200)),
                ("roi_per_month", models.CharField(default="3", max_length=200)),
                ("roi_recieved", models.CharField(default="0", max_length=200)),
                (
                    "next_date",
                    models.CharField(
                        default="2023-09-01 05:44:45.574389", max_length=200
                    ),
                ),
                (
                    "expire_date",
                    models.CharField(
                        default="2024-09-01 05:44:45.574389", max_length=200
                    ),
                ),
                (
                    "plan_id",
                    models.ForeignKey(
                        db_column="plan_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.membership",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "userstaking",
            },
        ),
        migrations.CreateModel(
            name="UserReferral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("refferal_income", models.CharField(default="0", max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 553375),
                        max_length=100,
                    ),
                ),
                ("status", models.CharField(default="1", max_length=100)),
                (
                    "child_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_child_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_id",
                    models.ForeignKey(
                        db_column="level_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.levels",
                    ),
                ),
                (
                    "parent_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_parent_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_referral",
            },
        ),
        migrations.CreateModel(
            name="userRank",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(default="0", max_length=200)),
                ("reward_recieved", models.CharField(default="0", max_length=200)),
                ("income", models.CharField(default="0", max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 555378),
                        max_length=200,
                    ),
                ),
                (
                    "rank_id",
                    models.ForeignKey(
                        db_column="rank_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.rank",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_rank",
            },
        ),
        migrations.CreateModel(
            name="UserMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.CharField(max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 549371),
                        max_length=200,
                    ),
                ),
                ("status", models.CharField(default="0", max_length=200)),
                ("max_roi", models.CharField(default="200", max_length=200)),
                ("booster_plan", models.CharField(default=False, max_length=200)),
                ("roi_recieved", models.CharField(default="0", max_length=200)),
                (
                    "next_date",
                    models.CharField(
                        default="2023-09-01 05:44:45.574389", max_length=200
                    ),
                ),
                (
                    "plan_id",
                    models.ForeignKey(
                        db_column="plan_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.membership",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "usermembership",
            },
        ),
        migrations.CreateModel(
            name="usercofounderclub",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reward_recieved", models.CharField(default="0", max_length=200)),
                ("status", models.CharField(default="0", max_length=100)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 555378),
                        max_length=200,
                    ),
                ),
                (
                    "club_id",
                    models.ForeignKey(
                        db_column="club_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.cofounderclub",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserAddressDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=200)),
                ("pincode", models.CharField(max_length=200)),
                ("district", models.CharField(max_length=200)),
                ("state", models.CharField(max_length=200)),
                ("country", models.CharField(max_length=200, null=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transactions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("coin", models.CharField(default="n/a", max_length=200)),
                ("network", models.CharField(default="n/a", max_length=200)),
                ("amount", models.CharField(default="n/a", max_length=200)),
                ("address", models.CharField(default="NA", max_length=200)),
                ("type", models.CharField(default="NA", max_length=200)),
                ("status", models.CharField(default="n/a", max_length=200)),
                ("created_at", models.CharField(default="n/a", max_length=200)),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        default="1",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "wallet_id",
                    models.ForeignKey(
                        db_column="wallet_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.wallet",
                    ),
                ),
            ],
            options={
                "db_table": "transactions",
            },
        ),
        migrations.CreateModel(
            name="TicketModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(default=" No titile", max_length=200)),
                ("question", models.TextField()),
                ("answer", models.TextField(default="")),
                ("status", models.CharField(default="0", max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 551372),
                        max_length=200,
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="status_activity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 552351),
                        max_length=200,
                    ),
                ),
                ("status", models.CharField(max_length=100)),
                ("amount_freezed", models.CharField(max_length=200)),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StakingRoiLogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("roi", models.CharField(max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 550377),
                        max_length=200,
                    ),
                ),
                ("status", models.CharField(default="1", max_length=100)),
                (
                    "plan_id",
                    models.ForeignKey(
                        db_column="plan_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.membership",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "stakingroilogs",
            },
        ),
        migrations.CreateModel(
            name="Ptransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(default="1", max_length=200)),
                ("type", models.CharField(default="1", max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 553375),
                        max_length=200,
                    ),
                ),
                ("amount", models.CharField(max_length=200)),
                ("currency", models.CharField(default="USDT", max_length=200)),
                (
                    "child_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_child_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_user_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "wallet_id",
                    models.ForeignKey(
                        db_column="wallet_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.wallet",
                    ),
                ),
            ],
            options={
                "db_table": "ptransfer",
            },
        ),
        migrations.AddField(
            model_name="membership",
            name="plan_id",
            field=models.ForeignKey(
                db_column="plan_id",
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.plansmodel",
            ),
        ),
        migrations.CreateModel(
            name="Login_history",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("login_time", models.CharField(max_length=200)),
                ("logout_time", models.CharField(max_length=200)),
                ("ip_location", models.CharField(default="NA", max_length=200)),
                ("city", models.CharField(default="NA", max_length=200)),
                ("region", models.CharField(default="NA", max_length=200)),
                ("country", models.CharField(default="NA", max_length=200)),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="levelincome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level_income", models.CharField(default="0", max_length=200)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 551372),
                        max_length=100,
                    ),
                ),
                ("status", models.CharField(default="1", max_length=100)),
                (
                    "child_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_child_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_id",
                    models.ForeignKey(
                        db_column="level_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.levels",
                    ),
                ),
                (
                    "parent_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_parent_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FastrackModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("income", models.CharField(default="0", max_length=100)),
                ("status", models.CharField(default="1", max_length=100)),
                (
                    "left_child",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_left_child",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_id",
                    models.ForeignKey(
                        db_column="level_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.levels",
                    ),
                ),
                (
                    "parent_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_parent_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "plan_id",
                    models.ForeignKey(
                        db_column="plan_id",
                        default="5",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.membership",
                    ),
                ),
                (
                    "right_child",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_right_child",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "fastrackmodel",
            },
        ),
        migrations.CreateModel(
            name="FarmingRoiLogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 549371),
                        max_length=200,
                    ),
                ),
                ("status", models.CharField(default="1", max_length=100)),
                ("roi", models.CharField(default="0", max_length=200)),
                (
                    "plan_id",
                    models.ForeignKey(
                        db_column="plan_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.usermembership",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "farmingroilogs",
            },
        ),
        migrations.CreateModel(
            name="Current_level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level_id", models.CharField(max_length=200)),
                ("points", models.CharField(default=0, max_length=200)),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "current_level",
            },
        ),
        migrations.CreateModel(
            name="changesponserlogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(default="1", max_length=100)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 548378),
                        max_length=100,
                    ),
                ),
                (
                    "from_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_from_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "to_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_to_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="businesslogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.CharField(max_length=100)),
                (
                    "date",
                    models.CharField(
                        default=datetime.datetime(2023, 9, 4, 6, 7, 12, 547384),
                        max_length=100,
                    ),
                ),
                ("status", models.CharField(default="1", max_length=100)),
                (
                    "child_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_child_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_parent_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "plan_id",
                    models.ForeignKey(
                        db_column="plan_id",
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.plansmodel",
                    ),
                ),
            ],
        ),
    ]
